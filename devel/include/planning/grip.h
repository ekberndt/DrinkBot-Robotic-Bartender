// Generated by gencpp from file planning/grip.msg
// DO NOT EDIT!


#ifndef PLANNING_MESSAGE_GRIP_H
#define PLANNING_MESSAGE_GRIP_H

#include <ros/service_traits.h>


#include <planning/gripRequest.h>
#include <planning/gripResponse.h>


namespace planning
{

struct grip
{

typedef gripRequest Request;
typedef gripResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct grip
} // namespace planning


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::planning::grip > {
  static const char* value()
  {
    return "f1efe09e5c849855890b1b914a2c218c";
  }

  static const char* value(const ::planning::grip&) { return value(); }
};

template<>
struct DataType< ::planning::grip > {
  static const char* value()
  {
    return "planning/grip";
  }

  static const char* value(const ::planning::grip&) { return value(); }
};


// service_traits::MD5Sum< ::planning::gripRequest> should match
// service_traits::MD5Sum< ::planning::grip >
template<>
struct MD5Sum< ::planning::gripRequest>
{
  static const char* value()
  {
    return MD5Sum< ::planning::grip >::value();
  }
  static const char* value(const ::planning::gripRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::planning::gripRequest> should match
// service_traits::DataType< ::planning::grip >
template<>
struct DataType< ::planning::gripRequest>
{
  static const char* value()
  {
    return DataType< ::planning::grip >::value();
  }
  static const char* value(const ::planning::gripRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::planning::gripResponse> should match
// service_traits::MD5Sum< ::planning::grip >
template<>
struct MD5Sum< ::planning::gripResponse>
{
  static const char* value()
  {
    return MD5Sum< ::planning::grip >::value();
  }
  static const char* value(const ::planning::gripResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::planning::gripResponse> should match
// service_traits::DataType< ::planning::grip >
template<>
struct DataType< ::planning::gripResponse>
{
  static const char* value()
  {
    return DataType< ::planning::grip >::value();
  }
  static const char* value(const ::planning::gripResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PLANNING_MESSAGE_GRIP_H
